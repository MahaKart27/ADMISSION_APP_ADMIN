{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Venka\\\\OneDrive\\\\Desktop\\\\ADS\\\\New folder\\\\ADMISSION_APP_ADMIN\\\\admin-login-page\\\\src\\\\Components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom'; // Assuming you're using React Router for navigation\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  handleLogin\n}) => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const success = await handleLogin(username, password);\n    if (success) {\n      setIsLoggedIn(true);\n    } else {\n      // Handle failed login, show error message or something\n      console.log('Login failed');\n    }\n  };\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this); // Redirect to your dashboard page after successful login\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"7X2qaHaMGBDGWQUFTca5NuNu9SU=\");\n_c = LoginForm;\nexport default LoginForm;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const LoginForm = ({ handleLogin }) => {\n//   const [username, setUsername] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\n//   const navigate = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const success = await handleLogin(username, password);\n//     if (success) {\n//       setIsLoggedIn(true);\n//       navigate('/dashboard'); // Redirect to your dashboard page after successful login\n//     } else {\n//       // Handle failed login, show error message or something\n//       console.log('Login failed');\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h1>Welcome</h1>\n//       <h2>Admin Login</h2>\n//       <form onSubmit={handleSubmit}>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Username\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Redirect","jsxDEV","_jsxDEV","LoginForm","handleLogin","_s","username","setUsername","password","setPassword","isLoggedIn","setIsLoggedIn","handleSubmit","e","preventDefault","success","console","log","to","fileName","_jsxFileName","lineNumber","columnNumber","children","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/Venka/OneDrive/Desktop/ADS/New folder/ADMISSION_APP_ADMIN/admin-login-page/src/Components/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom'; // Assuming you're using React Router for navigation\r\n\r\nconst LoginForm = ({ handleLogin }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const success = await handleLogin(username, password);\r\n    if (success) {\r\n      setIsLoggedIn(true);\r\n    } else {\r\n      // Handle failed login, show error message or something\r\n      console.log('Login failed');\r\n    }\r\n  };\r\n\r\n  if (isLoggedIn) {\r\n    return <Redirect to=\"/dashboard\" />; // Redirect to your dashboard page after successful login\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Welcome</h1>\r\n      <h2>Admin Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const LoginForm = ({ handleLogin }) => {\r\n//   const [username, setUsername] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const success = await handleLogin(username, password);\r\n//     if (success) {\r\n//       setIsLoggedIn(true);\r\n//       navigate('/dashboard'); // Redirect to your dashboard page after successful login\r\n//     } else {\r\n//       // Handle failed login, show error message or something\r\n//       console.log('Login failed');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h1>Welcome</h1>\r\n//       <h2>Admin Login</h2>\r\n//       <form onSubmit={handleSubmit}>\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Username\"\r\n//           value={username}\r\n//           onChange={(e) => setUsername(e.target.value)}\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           placeholder=\"Password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//         />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}